import React from 'react';
import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';

const styles = StyleSheet.create({
  page: {
    padding: 30,
    backgroundColor: '#ffffff'
  },
  header: {
    marginBottom: 20,
    textAlign: 'center'
  },
  title: {
    fontSize: 24,
    marginBottom: 10,
    color: '#1a56db'
  },
  subtitle: {
    fontSize: 14,
    color: '#6b7280'
  },
  section: {
    marginBottom: 20
  },
  sectionTitle: {
    fontSize: 16,
    marginBottom: 10,
    color: '#1a56db',
    borderBottom: '1px solid #e5e7eb',
    paddingBottom: 5
  },
  row: {
    flexDirection: 'row',
    marginBottom: 8
  },
  label: {
    width: '40%',
    fontSize: 12,
    color: '#6b7280'
  },
  value: {
    width: '60%',
    fontSize: 12,
    color: '#111827'
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    right: 30,
    textAlign: 'center',
    fontSize: 10,
    color: '#6b7280'
  }
});

const RouteReport = ({ routeData }) => (
  <Document>
    <Page size="A4" style={styles.page}>
      <View style={styles.header}>
        <Text style={styles.title}>Route Details Report</Text>
        <Text style={styles.subtitle}>Generated on {new Date().toLocaleDateString()}</Text>
      </View>

      {/* Route Information */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Route Information</Text>
        <View style={styles.row}>
          <Text style={styles.label}>Route Number:</Text>
          <Text style={styles.value}>{routeData.routeNo || 'N/A'}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>From Location:</Text>
          <Text style={styles.value}>{routeData.startLocation || 'N/A'}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>To Location:</Text>
          <Text style={styles.value}>{routeData.endLocation || 'N/A'}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>AC Price:</Text>
          <Text style={styles.value}>{routeData.acPrice ? `LKR ${routeData.acPrice}` : 'N/A'}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>Non-AC Price:</Text>
          <Text style={styles.value}>{routeData.nonAcPrice ? `LKR ${routeData.nonAcPrice}` : 'N/A'}</Text>
        </View>
      </View>

      {/* Bus Stops */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Bus Stops</Text>
        {routeData.stops && routeData.stops.length > 0 ? (
          routeData.stops.map((stop, index) => (
            <View key={index} style={styles.row}>
              <Text style={styles.label}>Stop {index + 1}:</Text>
              <Text style={styles.value}>{stop || 'N/A'}</Text>
            </View>
          ))
        ) : (
          <Text style={styles.value}>No bus stops available</Text>
        )}
      </View>

      <Text style={styles.footer}>
        This is an official document generated by the Bus Management System
      </Text>
    </Page>
  </Document>
);

export default RouteReport; 